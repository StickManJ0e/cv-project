{"ast":null,"code":"var _jsxFileName = \"/Users/CleopatraVann/Desktop/TheOdinProject/cv-project/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { Component, useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport CV from './components/CV';\nimport uniqid from \"uniqid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App2 = () => {\n  _s();\n  const [personal, setPersonal] = useState({\n    firstName: '',\n    lastName: '',\n    title: '',\n    email: '',\n    phoneNumber: '',\n    about: ''\n  });\n  const [education, setEducation] = useState({\n    schoolName: '',\n    degree: '',\n    start: '',\n    end: '',\n    id: uniqid()\n  });\n  const [educationExperiences, setEducationExperiences] = useState([]);\n  const [work, setWork] = useState({\n    company: '',\n    position: '',\n    mainTasks: '',\n    start: '',\n    end: '',\n    id: uniqid()\n  });\n  const [workExperiences, setWorkExperiences] = useState([]);\n  let addEducation = () => {\n    setEducationExperiences(educationExperiences.concat(education));\n    setEducation({\n      schoolName: '',\n      degree: '',\n      start: '',\n      end: '',\n      id: uniqid()\n    });\n  };\n  let addWork = () => {\n    setWorkExperiences(workExperiences.concat(work));\n    setWork({\n      company: '',\n      position: '',\n      mainTasks: '',\n      start: '',\n      end: '',\n      id: uniqid()\n    });\n  };\n  let removeEducation = id => {\n    setEducationExperiences(educationExperiences.filter(item => item.id !== id));\n  };\n  let removeWork = id => {\n    setWorkExperiences(workExperiences.filter(item => item.id !== id));\n  };\n  let setEducationInfo = () => {\n    //Setting each education object with form information\n    let educationDivs = document.querySelectorAll('.education-input-div');\n    educationDivs.forEach(educationDiv => {\n      //Get div key and corresponding index number\n      let key = educationDiv.getAttribute('id');\n      let index = educationExperiences.findIndex(education => education.id === key);\n      //Create new education object with from information and new array with the new object\n      let newObject = {\n        schoolName: document.querySelector(`div#${key} >input[name=\"schoolName\"]`).value,\n        degree: document.querySelector(`div#${key} >input[name=\"degree\"]`).value,\n        start: document.querySelector(`div#${key} >input[name=\"studyFrom\"]`).value,\n        end: document.querySelector(`div#${key} >input[name=\"studyTo\"]`).value,\n        id: educationExperiences[index].id\n      };\n      let newArray = educationExperiences;\n      newArray[index] = newObject;\n\n      //Set education array with new array\n      setEducationExperiences(newArray);\n    });\n  };\n  let setWorkInfo = () => {\n    let workDivs = document.querySelectorAll('.work-input-div');\n    workDivs.forEach(workDiv => {\n      //Get div key and corresponding index number\n      let key = workDiv.getAttribute('id');\n      let index = workExperiences.findIndex(work => work.id === key);\n\n      //Create new education object with from information and new array with the new object\n      let newObject = {\n        company: document.querySelector(`div#${key} >input[name=\"company\"]`).value,\n        position: document.querySelector(`div#${key} >input[name=\"position\"]`).value,\n        mainTasks: document.querySelector(`div#${key} >input[name=\"mainTasks\"]`).value,\n        start: document.querySelector(`div#${key} >input[name=\"workFrom\"]`).value,\n        end: document.querySelector(`div#${key} >input[name=\"workTo\"]`).value,\n        id: workExperiences[index].id\n      };\n      let newArray = workExperiences;\n      newArray[index] = newObject;\n\n      //Set work array with new array\n      setWorkExperiences(newArray);\n    });\n  };\n  let onFormChange = e => {\n    e.preventDefault();\n    setPersonal({\n      firstName: document.querySelector('input[name=\"firstName\"]').value,\n      lastName: document.querySelector('input[name=\"lastName\"]').value,\n      title: document.querySelector('input[name=\"title\"]').value,\n      email: document.querySelector('input[name=\"email\"]').value,\n      phoneNumber: document.querySelector('input[name=\"phoneNumber\"]').value,\n      about: document.querySelector('input[name=\"about\"]').value\n    });\n    setEducationInfo();\n    setWorkInfo();\n    this.setState();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onFormChange: onFormChange,\n      personal: personal,\n      addWork: addWork,\n      removeWork: removeWork,\n      workExperiences: workExperiences,\n      addEducation: addEducation,\n      removeEducation: removeEducation,\n      educationExperiences: educationExperiences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CV, {\n      personal: personal,\n      educationExperiences: educationExperiences,\n      workExperiences: workExperiences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n//Class Component Ver\n// class App extends Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       personal: {\n//         firstName: '',\n//         lastName: '',\n//         title: '',\n//         email: '',\n//         phoneNumber: '',\n//         about: '',\n//       },\n//       education: {\n//         schoolName: '',\n//         degree: '',\n//         start: '',\n//         end: '',\n//         id: uniqid(),\n//       },\n//       educationExperiences: [],\n//       work: {\n//         company: '',\n//         position: '',\n//         mainTasks: '',\n//         start: '',\n//         end: '',\n//         id: uniqid(),\n//       },\n//       workExperiences: [],\n//     }\n//   }\n\n//   //Add Education and Work Tiles to template\n//   addEducation = () => {\n//     this.setState({\n//       educationExperiences: this.state.educationExperiences.concat(this.state.education),\n//       education: {\n//         schoolName: '',\n//         degree: '',\n//         start: '',\n//         end: '',\n//         id: uniqid(),\n//       },\n//     })\n//   }\n\n//   addWork = () => {\n//     this.setState({\n//       workExperiences: this.state.workExperiences.concat(this.state.work),\n//       work: {\n//         company: '',\n//         position: '',\n//         mainTasks: '',\n//         start: '',\n//         end: '',\n//         id: uniqid(),\n//       },\n//     })\n//   }\n\n//   //Remove Education and Work Tiles from template\n//   removeEducation = (id) => {\n//     this.setState({\n//       educationExperiences: this.state.educationExperiences.filter(item => item.id !== id),\n//     });\n//   }\n\n//   removeWork = (id) => {\n//     this.setState({\n//       workExperiences: this.state.workExperiences.filter(item => item.id !== id),\n//     })\n//   }\n\n//   setEducationInfo = () => {\n//     //Setting each education object with form information\n//     let educationDivs = document.querySelectorAll('.education-input-div');\n//     educationDivs.forEach((educationDiv) => {\n//       //Get div key and corresponding index number\n//       let key = educationDiv.getAttribute('id');\n//       let index = this.state.educationExperiences.findIndex((education) => education.id === key);\n//       //Create new education object with from information and new array with the new object\n//       let newObject = {\n//         schoolName: document.querySelector(`div#${key} >input[name=\"schoolName\"]`).value,\n//         degree: document.querySelector(`div#${key} >input[name=\"degree\"]`).value,\n//         start: document.querySelector(`div#${key} >input[name=\"studyFrom\"]`).value,\n//         end: document.querySelector(`div#${key} >input[name=\"studyTo\"]`).value,\n//         id: this.state.educationExperiences[index].id,\n//       }\n//       let newArray = this.state.educationExperiences;\n//       newArray[index] = newObject;\n\n//       //Set education array with new array\n//       this.setState({\n//         educationExperiences: newArray,\n//       })\n//     })\n//   }\n\n//   setWorkInfo = () => {\n//     let workDivs = document.querySelectorAll('.work-input-div');\n//     workDivs.forEach((workDiv) => {\n//       //Get div key and corresponding index number\n//       let key = workDiv.getAttribute('id');\n//       let index = this.state.workExperiences.findIndex((work) => work.id === key);\n\n//       //Create new education object with from information and new array with the new object\n//       let newObject = {\n//         company: document.querySelector(`div#${key} >input[name=\"company\"]`).value,\n//         position: document.querySelector(`div#${key} >input[name=\"position\"]`).value,\n//         mainTasks: document.querySelector(`div#${key} >input[name=\"mainTasks\"]`).value,\n//         start: document.querySelector(`div#${key} >input[name=\"workFrom\"]`).value,\n//         end: document.querySelector(`div#${key} >input[name=\"workTo\"]`).value,\n//         id: this.state.workExperiences[index].id,\n//       }\n//       let newArray = this.state.workExperiences;\n//       newArray[index] = newObject;\n\n//       //Set work array with new array\n//       this.setState({\n//         workExperiences: newArray,\n//       })\n//     })\n//   }\n\n//   //When form is submitted\n//   onFormChange = (e) => {\n//     e.preventDefault();\n//     this.setState({\n//       //Set state for personal information\n//       personal: {\n//         firstName: document.querySelector('input[name=\"firstName\"]').value,\n//         lastName: document.querySelector('input[name=\"lastName\"]').value,\n//         title: document.querySelector('input[name=\"title\"]').value,\n//         email: document.querySelector('input[name=\"email\"]').value,\n//         phoneNumber: document.querySelector('input[name=\"phoneNumber\"]').value,\n//         about: document.querySelector('input[name=\"about\"]').value,\n//       },\n//     })\n\n//     this.setEducationInfo();\n//     this.setWorkInfo();\n//   }\n\n//   render() {\n//     const { personal, educationExperiences, workExperiences } = this.state;\n\n//     return (\n//       <div>\n//         <Form\n//           onFormChange={this.onFormChange}\n//           personal={personal}\n//           addWork={this.addWork}\n//           removeWork={this.removeWork}\n//           workExperiences={workExperiences}\n//           addEducation={this.addEducation}\n//           removeEducation={this.removeEducation}\n//           educationExperiences={educationExperiences}\n//         />\n//         <CV\n//           personal={personal}\n//           educationExperiences={educationExperiences}\n//           workExperiences={workExperiences}\n//         />\n//       </div>\n//     )\n//   }\n// }\n_s(App2, \"DBBJ3bjYcF8mSoCUC6BflDf8cDI=\");\n_c = App2;\nexport default App2;\nvar _c;\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"names":["React","Component","useState","useEffect","Form","CV","uniqid","jsxDEV","_jsxDEV","App2","_s","personal","setPersonal","firstName","lastName","title","email","phoneNumber","about","education","setEducation","schoolName","degree","start","end","id","educationExperiences","setEducationExperiences","work","setWork","company","position","mainTasks","workExperiences","setWorkExperiences","addEducation","concat","addWork","removeEducation","filter","item","removeWork","setEducationInfo","educationDivs","document","querySelectorAll","forEach","educationDiv","key","getAttribute","index","findIndex","newObject","querySelector","value","newArray","setWorkInfo","workDivs","workDiv","onFormChange","e","preventDefault","setState","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/CleopatraVann/Desktop/TheOdinProject/cv-project/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { Component, useState, useEffect } from 'react';\nimport Form from './components/Form'\nimport CV from './components/CV';\nimport uniqid from \"uniqid\";\n\nconst App2 = () => {\n  const [personal, setPersonal] = useState({\n    firstName: '',\n    lastName: '',\n    title: '',\n    email: '',\n    phoneNumber: '',\n    about: '',\n  });\n\n  const [education, setEducation] = useState({\n    schoolName: '',\n    degree: '',\n    start: '',\n    end: '',\n    id: uniqid(),\n  });\n\n  const [educationExperiences, setEducationExperiences] = useState([]);\n\n  const [work, setWork] = useState({\n    company: '',\n    position: '',\n    mainTasks: '',\n    start: '',\n    end: '',\n    id: uniqid(),\n  });\n\n  const [workExperiences, setWorkExperiences] = useState([]);\n\n  let addEducation = () => {\n    setEducationExperiences(educationExperiences.concat(education));\n    setEducation({\n      schoolName: '',\n      degree: '',\n      start: '',\n      end: '',\n      id: uniqid(),\n    })\n  }\n\n  let addWork = () => {\n    setWorkExperiences(workExperiences.concat(work));\n    setWork({\n      company: '',\n      position: '',\n      mainTasks: '',\n      start: '',\n      end: '',\n      id: uniqid(),\n    })\n  }\n\n  let removeEducation = (id) => {\n    setEducationExperiences(educationExperiences.filter((item) => item.id !== id))\n  }\n\n  let removeWork = (id) => {\n    setWorkExperiences(workExperiences.filter((item) => item.id !== id))\n  }\n\n  let setEducationInfo = () => {\n    //Setting each education object with form information\n    let educationDivs = document.querySelectorAll('.education-input-div');\n    educationDivs.forEach((educationDiv) => {\n      //Get div key and corresponding index number\n      let key = educationDiv.getAttribute('id');\n      let index = educationExperiences.findIndex((education) => education.id === key);\n      //Create new education object with from information and new array with the new object\n      let newObject = {\n        schoolName: document.querySelector(`div#${key} >input[name=\"schoolName\"]`).value,\n        degree: document.querySelector(`div#${key} >input[name=\"degree\"]`).value,\n        start: document.querySelector(`div#${key} >input[name=\"studyFrom\"]`).value,\n        end: document.querySelector(`div#${key} >input[name=\"studyTo\"]`).value,\n        id: educationExperiences[index].id,\n      }\n      let newArray = educationExperiences;\n      newArray[index] = newObject;\n\n      //Set education array with new array\n      setEducationExperiences(newArray);\n    })\n  }\n\n  let setWorkInfo = () => {\n    let workDivs = document.querySelectorAll('.work-input-div');\n    workDivs.forEach((workDiv) => {\n      //Get div key and corresponding index number\n      let key = workDiv.getAttribute('id');\n      let index = workExperiences.findIndex((work) => work.id === key);\n\n      //Create new education object with from information and new array with the new object\n      let newObject = {\n        company: document.querySelector(`div#${key} >input[name=\"company\"]`).value,\n        position: document.querySelector(`div#${key} >input[name=\"position\"]`).value,\n        mainTasks: document.querySelector(`div#${key} >input[name=\"mainTasks\"]`).value,\n        start: document.querySelector(`div#${key} >input[name=\"workFrom\"]`).value,\n        end: document.querySelector(`div#${key} >input[name=\"workTo\"]`).value,\n        id: workExperiences[index].id,\n      }\n      let newArray = workExperiences;\n      newArray[index] = newObject;\n\n      //Set work array with new array\n      setWorkExperiences(newArray);\n    })\n  }\n\n  let onFormChange = (e) => {\n    e.preventDefault();\n    setPersonal({\n      firstName: document.querySelector('input[name=\"firstName\"]').value,\n      lastName: document.querySelector('input[name=\"lastName\"]').value,\n      title: document.querySelector('input[name=\"title\"]').value,\n      email: document.querySelector('input[name=\"email\"]').value,\n      phoneNumber: document.querySelector('input[name=\"phoneNumber\"]').value,\n      about: document.querySelector('input[name=\"about\"]').value,\n    })\n\n    setEducationInfo();\n    setWorkInfo();\n    this.setState()\n  }\n\n  return (\n    <div>\n      <Form\n        onFormChange={onFormChange}\n        personal={personal}\n        addWork={addWork}\n        removeWork={removeWork}\n        workExperiences={workExperiences}\n        addEducation={addEducation}\n        removeEducation={removeEducation}\n        educationExperiences={educationExperiences}\n      />\n      <CV\n        personal={personal}\n        educationExperiences={educationExperiences}\n        workExperiences={workExperiences}\n      />\n    </div>\n  )\n\n}\n\n\n//Class Component Ver\n// class App extends Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       personal: {\n//         firstName: '',\n//         lastName: '',\n//         title: '',\n//         email: '',\n//         phoneNumber: '',\n//         about: '',\n//       },\n//       education: {\n//         schoolName: '',\n//         degree: '',\n//         start: '',\n//         end: '',\n//         id: uniqid(),\n//       },\n//       educationExperiences: [],\n//       work: {\n//         company: '',\n//         position: '',\n//         mainTasks: '',\n//         start: '',\n//         end: '',\n//         id: uniqid(),\n//       },\n//       workExperiences: [],\n//     }\n//   }\n\n//   //Add Education and Work Tiles to template\n//   addEducation = () => {\n//     this.setState({\n//       educationExperiences: this.state.educationExperiences.concat(this.state.education),\n//       education: {\n//         schoolName: '',\n//         degree: '',\n//         start: '',\n//         end: '',\n//         id: uniqid(),\n//       },\n//     })\n//   }\n\n//   addWork = () => {\n//     this.setState({\n//       workExperiences: this.state.workExperiences.concat(this.state.work),\n//       work: {\n//         company: '',\n//         position: '',\n//         mainTasks: '',\n//         start: '',\n//         end: '',\n//         id: uniqid(),\n//       },\n//     })\n//   }\n\n//   //Remove Education and Work Tiles from template\n//   removeEducation = (id) => {\n//     this.setState({\n//       educationExperiences: this.state.educationExperiences.filter(item => item.id !== id),\n//     });\n//   }\n\n//   removeWork = (id) => {\n//     this.setState({\n//       workExperiences: this.state.workExperiences.filter(item => item.id !== id),\n//     })\n//   }\n\n//   setEducationInfo = () => {\n//     //Setting each education object with form information\n//     let educationDivs = document.querySelectorAll('.education-input-div');\n//     educationDivs.forEach((educationDiv) => {\n//       //Get div key and corresponding index number\n//       let key = educationDiv.getAttribute('id');\n//       let index = this.state.educationExperiences.findIndex((education) => education.id === key);\n//       //Create new education object with from information and new array with the new object\n//       let newObject = {\n//         schoolName: document.querySelector(`div#${key} >input[name=\"schoolName\"]`).value,\n//         degree: document.querySelector(`div#${key} >input[name=\"degree\"]`).value,\n//         start: document.querySelector(`div#${key} >input[name=\"studyFrom\"]`).value,\n//         end: document.querySelector(`div#${key} >input[name=\"studyTo\"]`).value,\n//         id: this.state.educationExperiences[index].id,\n//       }\n//       let newArray = this.state.educationExperiences;\n//       newArray[index] = newObject;\n\n//       //Set education array with new array\n//       this.setState({\n//         educationExperiences: newArray,\n//       })\n//     })\n//   }\n\n//   setWorkInfo = () => {\n//     let workDivs = document.querySelectorAll('.work-input-div');\n//     workDivs.forEach((workDiv) => {\n//       //Get div key and corresponding index number\n//       let key = workDiv.getAttribute('id');\n//       let index = this.state.workExperiences.findIndex((work) => work.id === key);\n\n//       //Create new education object with from information and new array with the new object\n//       let newObject = {\n//         company: document.querySelector(`div#${key} >input[name=\"company\"]`).value,\n//         position: document.querySelector(`div#${key} >input[name=\"position\"]`).value,\n//         mainTasks: document.querySelector(`div#${key} >input[name=\"mainTasks\"]`).value,\n//         start: document.querySelector(`div#${key} >input[name=\"workFrom\"]`).value,\n//         end: document.querySelector(`div#${key} >input[name=\"workTo\"]`).value,\n//         id: this.state.workExperiences[index].id,\n//       }\n//       let newArray = this.state.workExperiences;\n//       newArray[index] = newObject;\n\n//       //Set work array with new array\n//       this.setState({\n//         workExperiences: newArray,\n//       })\n//     })\n//   }\n\n//   //When form is submitted\n//   onFormChange = (e) => {\n//     e.preventDefault();\n//     this.setState({\n//       //Set state for personal information\n//       personal: {\n//         firstName: document.querySelector('input[name=\"firstName\"]').value,\n//         lastName: document.querySelector('input[name=\"lastName\"]').value,\n//         title: document.querySelector('input[name=\"title\"]').value,\n//         email: document.querySelector('input[name=\"email\"]').value,\n//         phoneNumber: document.querySelector('input[name=\"phoneNumber\"]').value,\n//         about: document.querySelector('input[name=\"about\"]').value,\n//       },\n//     })\n\n//     this.setEducationInfo();\n//     this.setWorkInfo();\n//   }\n\n//   render() {\n//     const { personal, educationExperiences, workExperiences } = this.state;\n\n//     return (\n//       <div>\n//         <Form\n//           onFormChange={this.onFormChange}\n//           personal={personal}\n//           addWork={this.addWork}\n//           removeWork={this.removeWork}\n//           workExperiences={workExperiences}\n//           addEducation={this.addEducation}\n//           removeEducation={this.removeEducation}\n//           educationExperiences={educationExperiences}\n//         />\n//         <CV\n//           personal={personal}\n//           educationExperiences={educationExperiences}\n//           workExperiences={workExperiences}\n//         />\n//       </div>\n//     )\n//   }\n// }\n\nexport default App2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}